{"version":3,"sources":["js/components/Display.js","js/store/ui.js","js/store/data.js","js/store/store.js","js/logic/calculator.js","js/logic/controller.js","js/components/Pad.js","js/components/Calculator.js","js/components/Footer.js","js/components/App.js","index.js"],"names":["Display","id","text","useSelector","state","ui","className","uiSlice","createSlice","name","initialState","display","formula","reducers","reducer","action","payload","prepare","actions","tokens","clearTokens","addToken","push","token","deleteToken","slice","updateToken","length","store","configureStore","uiReducer","data","dataReducer","dispatch","SYMBOLS","clear","value","uiText","btnText","zero","one","two","three","four","five","six","seven","eight","nine","decimal","add","subtract","multiply","divide","equals","backspace","TOKENTYPES","OPORDER","Map","set","OPEXEC","inputs","reduce","acc","val","printToken","symbols","map","symbol","join","createToken","type","appendToNumberToken","result","evaluateNumberToken","strVal","Number","evaluateTree","tree","children","child","errors","get","calculate","root","current","temp","parent","index","indexOf","parseInput","answer","console","error","status","submitSymbol","initial","getState","updatedNum","newNum","zeroToken","negFloatToken","floatToken","negToken","opToken","trimmed","parts","toString","split","part","found","undefined","prop","createNumberToken","log","final","initialise","Pad","onClick","event","preventDefault","Calculator","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3c59cca.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './Display.scss';\n\n\nconst Display = ({id}) => {\n    const text = useSelector(state => state.ui[id]);\n\n    return (\n        <div id={id} className={`display`}>{text}</div>\n    );\n};\n\nexport default Display;","import { createSlice } from '@reduxjs/toolkit';\n\n// default state\nconst initialState = {\n    display  : \"\",   // current token\n    formula  : \"\",   // formula to date\n};\n\nconst uiSlice = createSlice({\n    name: 'ui',\n    initialState,\n    reducers: {\n        display: {\n            reducer: (state, action) => { state.display = action.payload; },\n            prepare: (text) => ({payload: text}),\n        },\n        formula: {\n            reducer: (state, action) => { state.formula = action.payload; },\n            prepare: (text) => ({payload: text}),\n        },\n    }\n});\n\nexport const actions = uiSlice.actions;\nexport default uiSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\n// default state\nconst initialState = {\n    tokens: [], // array of tokens for calculator\n};\n\n\nconst uiSlice = createSlice({\n    name: 'data',\n    initialState,\n    reducers: {\n        clearTokens : {\n            reducer: (state, action) => { state.tokens = []; },\n        },\n        addToken : {\n            reducer: (state, action) => { state.tokens.push(action.payload); },\n            prepare: (token) => ({ payload: token }),\n        },\n        deleteToken: {\n            reducer: (state, action) => { state.tokens = state.tokens.slice(0, -1) }\n        },\n        updateToken : {\n            reducer: (state, action) => { state.tokens[state.tokens.length-1] = action.payload; },\n            prepare: (token) => ({ payload: token }),\n        },\n    }\n});\n\nexport const actions = uiSlice.actions;\nexport default uiSlice.reducer;\n\n","import { configureStore } from '@reduxjs/toolkit'\nimport uiReducer from './ui';\nimport dataReducer from './data';\n\n// Devtools, thunk middelware and reducer composer are built into configureStore\nconst store = configureStore(\n    {   reducer : { ui   : uiReducer,\n                    data : dataReducer,\n        }\n    }\n);\n\nexport default store\nexport const dispatch = store.dispatch;","\n// Constants\nexport const SYMBOLS = {\n    // id:      used for identification and comparison\n    // value:   used for calculation\n    // uiText:  for 'LCD' display\n    // btnText: for keypads display\n    clear   : {id: '#', value: '',  uiText: '',  btnText: 'AC'},\n    zero    : {id: '0', value: '0', uiText: '0', btnText: '0'},\n    one     : {id: '1', value: '1', uiText: '1', btnText: '1'},\n    two     : {id: '2', value: '2', uiText: '2', btnText: '2'},\n    three   : {id: '3', value: '3', uiText: '3', btnText: '3'},\n    four    : {id: '4', value: '4', uiText: '4', btnText: '4'},\n    five    : {id: '5', value: '5', uiText: '5', btnText: '5'},\n    six     : {id: '6', value: '6', uiText: '6', btnText: '6'},\n    seven   : {id: '7', value: '7', uiText: '7', btnText: '7'},\n    eight   : {id: '8', value: '8', uiText: '8', btnText: '8'},\n    nine    : {id: '9', value: '9', uiText: '9', btnText: '9'},\n    decimal : {id: '.', value: '.', uiText: '.', btnText: '.'},\n    add     : {id: '+', value: '+', uiText: '+', btnText: '+'},\n    subtract: {id: '-', value: '-', uiText: '-', btnText: '-'},\n    multiply: {id: '*', value: '*', uiText: '\\u00D7', btnText: '*'},\n    divide  : {id: '/', value: '/', uiText: '\\u00F7', btnText: '/'},\n    equals  : {id: '=', value: '=', uiText: '=', btnText: '='},\n    backspace: {id: '<', value: '<', uiText: '<', btnText: '\\u2190'},\n}\n\nexport const TOKENTYPES = {\n    integer : 'integer',\n    float   : 'float',\n    operator: 'operator'\n}\n\nconst OPORDER = new Map();\n//BO(DM)(AS)\nOPORDER.set(SYMBOLS.subtract,  4);\nOPORDER.set(SYMBOLS.add,       4);\nOPORDER.set(SYMBOLS.multiply,  1);\nOPORDER.set(SYMBOLS.divide,    1);\n\nconst OPEXEC = new Map();\nOPEXEC.set(SYMBOLS.subtract,  (inputs) => inputs.reduce((acc, val) => acc-val));\nOPEXEC.set(SYMBOLS.add,       (inputs) => inputs.reduce((acc, val) => acc+val));\nOPEXEC.set(SYMBOLS.multiply,  (inputs) => inputs.reduce((acc, val) => acc*val));\nOPEXEC.set(SYMBOLS.divide,    (inputs) => inputs.reduce((acc, val) => acc/val));\n\n\n\n// Utility functions for other parts of apps\nexport const printToken = (token) => {\n    return token.symbols.map(symbol => symbol.uiText).join('');\n};\n\nexport const createToken = (type, symbol) => {\n    return {\n        type,\n        symbols: [...symbol],\n    }\n};\n\n// Call only for number (integer and float) types\nexport const appendToNumberToken = (token, symbol) => {\n    const result = {...token};\n    if (symbol !== SYMBOLS.decimal) {\n        if (token.symbols.length === 1 && token.symbols[0] === SYMBOLS.zero) {\n            // only allow one leading zero\n            result.symbols = [symbol];\n        } else if (token.symbols.length === 2 && token.symbols[0] === SYMBOLS.subtract && token.symbols[1] === SYMBOLS.zero) {\n            result.symbols = [SYMBOLS.subtract, symbol];\n        } else {\n            result.symbols = [...token.symbols, symbol];\n        }\n\n    } else if (token.type === TOKENTYPES.integer) {\n        // don't use more than one decimal point\n        result.symbols = [...token.symbols, symbol];\n        result.type = TOKENTYPES.float;\n    }\n    return result;\n}\n\n// Call only for number (integer and float) types\nconst evaluateNumberToken = (token) => {\n    const strVal = token.symbols.map(symbol => symbol.value).join('');\n    const value = Number(strVal);\n    return value;\n}\n\nexport const createNumberToken = (value) => {\n    const parts = value.toString().split('');\n    const result = {type: TOKENTYPES.integer, symbols: []};\n    for (const part of parts) {\n        let found = undefined;\n        for (const prop in SYMBOLS) {\n            if (part === SYMBOLS[prop].value) {\n                found = SYMBOLS[prop];\n                break;\n            }\n        }\n        if (found === undefined) {\n            return `Error unknown symbol: ${part}`;\n        }\n        if (found === SYMBOLS.decimal) {\n            result.type = TOKENTYPES.float;\n        }\n        result.symbols.push(found);\n    }\n    return result;\n}\n\n\n// Main functions\n\n/**\n * Accepts string of inputs and returns a calculation tree\n */\nexport const parseInput = (tokens) => {\n    let root = null;\n    let current = null;\n    let temp = null;\n\n    for (const token of tokens) {\n        if ( token.type === TOKENTYPES.operator ) {\n            temp = {value: token.symbols[0], type: token.type, parent: null, children: []};\n\n            // move up the tree until we find the correct insertion point\n            // note: operations lower in the tree are calculated first\n            while ( current.parent !== null && OPORDER.get(temp.value) >= OPORDER.get(current.parent.value) ) {\n                current = current.parent;\n            }\n// console.log('pre:', temp.value, current, current.value);\n            // insert the operator node\n            temp.children.push(current);\n            temp.parent = current.parent;\n            if (current.parent == null) { // the current node is root\n                root = temp;\n            } else {\n                const index = current.parent.children.indexOf(current);\n                current.parent.children[index] = temp;\n            }\n            current.parent = temp;\n            current = temp;\n// console.log('post:', root.value, root, current.value, current)\n        \n        } else {  // this is a number\n            const value = evaluateNumberToken(token);\n            temp = {value, type: token.type, parent: null, children: []};\n            if (root === null) { // first leaf\n                root = temp;\n            } else { // assume parent is an operator \n                temp.parent = current;\n                current.children.push(temp);\n            } \n            current = temp;\n        }\n    }\n\n    return root;\n}\n\n/** recursive routine to calculate value of inputs */\nexport const evaluateTree = (tree) => {\n    if (tree.type === TOKENTYPES.float || tree.type === TOKENTYPES.integer) {\n        // this should be an end leaf node\n        if (tree.children.length !== 0) {\n            return `Number node (value: ${tree.value}) should be a leaf, but has children)`;\n        }\n        return tree.value;\n    }\n\n    if (tree.type === TOKENTYPES.operator) {\n        if (tree.children.length < 2) {\n            return `Not enough operands for operator: ${tree.value.uiText} ${tree.children.map(child => child.value)}`;\n        }\n        \n        const inputs = tree.children.map(child => evaluateTree(child));\n        const errors = inputs.reduce( (acc,val) => {\n            if (typeof val === 'string') {\n                if (acc.length > 0) acc += ' ' + val;\n                else acc += val;\n            }\n            return acc;\n        }, '');\n        \n        if (errors !== '') return errors;\n\n        return OPEXEC.get(tree.value)(inputs);\n    }\n\n    return `Unknown node found: ${tree.type}, {$tree.value}`;\n}\n\n\n/**\n * inputs: tokens - array of calculator tokens\n * returns: {\n *      status : 'success' | 'error'\n *      value  : number | error reason\n * }\n */\nexport const calculate = (tokens) => {\n    const tree = parseInput(tokens);\n    const answer = evaluateTree(tree);\n\n    if (typeof answer === 'string') {\n        console.error(answer);\n        return {status: 'error', value: answer};\n    }\n\n    return {status: 'success', value: answer};\n}","import store, {dispatch} from '../store/store';\nimport { actions as ui } from '../store/ui';\nimport { actions as data } from '../store/data'\nimport { SYMBOLS, TOKENTYPES, printToken, createToken, appendToNumberToken, calculate, createNumberToken } from './calculator';\n\n// Application Constants\n\n// utility functions\nconst printTokens = (tokens) => {\n    return tokens.map(token => printToken(token)).join(' ');\n}\n\n\n// App Functions\nexport const submitSymbol = (symbol) => {\n    const initial = store.getState().data.tokens;\n    const current = initial.length > 0 ? initial[initial.length-1] : null;\n\n    switch (symbol) {\n        case SYMBOLS.clear:\n            dispatch(data.clearTokens());\n            break;\n\n        case SYMBOLS.zero:\n        case SYMBOLS.one:\n        case SYMBOLS.two:\n        case SYMBOLS.three:\n        case SYMBOLS.four:\n        case SYMBOLS.five:\n        case SYMBOLS.six:\n        case SYMBOLS.seven:\n        case SYMBOLS.eight:\n        case SYMBOLS.nine:\n            if (current !== null && current.type !== TOKENTYPES.operator) {\n                const updatedNum = appendToNumberToken(current, symbol);\n                dispatch( data.updateToken(updatedNum) );\n            } else {\n                const newNum = createToken(TOKENTYPES.integer, [symbol]);\n                dispatch( data.addToken(newNum) );\n            }\n            break;\n\n        case SYMBOLS.decimal:\n            if (current === null || current.type === TOKENTYPES.operator) {\n                const zeroToken = appendToNumberToken( createToken(TOKENTYPES.integer, [SYMBOLS.zero]), symbol);\n                dispatch( data.addToken(zeroToken) );\n            } else if (current.type === TOKENTYPES.integer && current.symbols.length === 1 && current.symbols[0] === SYMBOLS.subtract) {\n                const negFloatToken = createToken(TOKENTYPES.float, [...current.symbols, symbol]);\n                dispatch( data.addToken(negFloatToken) );\n            } else {\n                const floatToken = appendToNumberToken( current, symbol);\n                dispatch( data.updateToken(floatToken) );\n            }\n            break;\n\n        case SYMBOLS.subtract:\n            //Special handling for negative numbers\n            if (current === null || current.type === TOKENTYPES.operator) {\n                const negToken = createToken(TOKENTYPES.integer, [symbol]);\n                dispatch( data.addToken(negToken) );\n                break;\n            }\n        case SYMBOLS.add:\n        case SYMBOLS.divide:\n        case SYMBOLS.multiply:\n            const opToken = createToken(TOKENTYPES.operator, [symbol]);\n            if (current !== null) {\n                if (current.type === TOKENTYPES.operator) {\n                    dispatch( data.updateToken(opToken) );\n                } else if (current.type === TOKENTYPES.integer && current.symbols.length === 1 && current.symbols[0] === SYMBOLS.subtract) {\n                    // special case of negative integer prepped, but no values entered yet.\n                    dispatch( data.deleteToken() );\n                    dispatch( data.updateToken(opToken));\n                } else {\n                    dispatch( data.addToken(opToken) );    \n                }\n            } else {\n                dispatch( data.addToken(opToken) );\n            }\n            break;\n\n        case SYMBOLS.backspace:\n            if (current !== null) {\n                if (current.symbols.length === 1) {\n                    dispatch( data.deleteToken() );\n                } else {\n                    // remove the last symbol of current token\n                    const trimmed = createToken( current.type, current.symbols.slice(0, -1) );\n                    dispatch( data.updateToken(trimmed) );\n                }\n            }\n            break;\n\n        case SYMBOLS.equals:\n            const result = calculate(initial);\n            if (result.status === 'error') {\n                dispatch( ui.display('invalid inputs'));\n                return;\n            }\n            dispatch( ui.display( result.value ) );\n            dispatch( data.clearTokens() );\n            dispatch( data.addToken(createNumberToken(result.value)) );\n            return;\n\n        default:\n            console.log(`Unexpected key received by controller: ${symbol.id === undefined ? symbol : symbol.id}`);\n\n    }\n\n    // Update the UI with changes from above\n    const final = store.getState().data.tokens;\n    if (final.length > 0) {\n        dispatch( ui.display( printToken(final[final.length-1]) ));\n        dispatch( ui.formula( printTokens(final) ));\n    } else {\n        dispatch( ui.display('0'));\n        dispatch( ui.formula(''));\n    }\n}\n\n// keycode event handler\n// const keyDown = (event) => {\n//     const keylist = store.getState().data.keylist;\n//     const id = MAPKEY[event.code];\n//     if (keylist[id] === 'enabled') {\n//         playClip(id);\n//     }\n// }\n\n// Startup sequence for the programme\nexport const initialise = () => {\n    dispatch(data.clearTokens());\n    dispatch(ui.display('0'));\n    dispatch(ui.formula(''));\n    // document.addEventListener('keydown', keyDown);\n};\n\nexport default initialise;","import { submitSymbol } from '../logic/controller';\nimport './Pad.scss';\n\n\nconst Pad = ({id, symbol}) => {\n   \n    const onClick = (event) => {\n        event.preventDefault();\n        submitSymbol(symbol);\n    }\n\n    return (\n        <button id={id} className={`pad`} onClick={onClick}>\n            {symbol.btnText}\n        </button>\n    );\n};\n\nexport default Pad;","import Display from './Display';\nimport Pad from './Pad';\nimport { SYMBOLS } from '../logic/calculator';\nimport './Calculator.scss';\n\nconst Calculator = () => {\n    return (\n        <div id=\"calculator\">\n            <Display id=\"formula\"/>\n            <Display id=\"display\" />\n            <Pad id=\"zero\"      symbol={SYMBOLS.zero} />\n            <Pad id=\"one\"       symbol={SYMBOLS.one} />\n            <Pad id=\"two\"       symbol={SYMBOLS.two} />\n            <Pad id=\"three\"     symbol={SYMBOLS.three} />\n            <Pad id=\"four\"      symbol={SYMBOLS.four} />\n            <Pad id=\"five\"      symbol={SYMBOLS.five} />\n            <Pad id=\"six\"       symbol={SYMBOLS.six} />\n            <Pad id=\"seven\"     symbol={SYMBOLS.seven} />\n            <Pad id=\"eight\"     symbol={SYMBOLS.eight} />\n            <Pad id=\"nine\"      symbol={SYMBOLS.nine} />\n            <Pad id=\"clear\"     symbol={SYMBOLS.clear} />\n            <Pad id=\"add\"       symbol={SYMBOLS.add}  />\n            <Pad id=\"subtract\"  symbol={SYMBOLS.subtract}  />\n            <Pad id=\"multiply\"  symbol={SYMBOLS.multiply}  />\n            <Pad id=\"divide\"    symbol={SYMBOLS.divide}  />\n            <Pad id=\"decimal\"   symbol={SYMBOLS.decimal}  />\n            <Pad id=\"equals\"    symbol={SYMBOLS.equals}  />\n            <Pad id=\"backspace\" symbol={SYMBOLS.backspace}  />\n        </div>\n    );\n};\n\nexport default Calculator;","import './Footer.scss';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>\n                created by <em>74c5</em>\n            </p>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport Calculator from './Calculator';\nimport Footer from './Footer'\nimport './App.scss';\n\n\nconst App = () => {\n    return (\n        <div id=\"react-app\">\n            <main>\n                <Calculator />\n            </main>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider} from 'react-redux';\nimport App from './js/components/App';\nimport store from './js/store/store';\nimport initialise from './js/logic/controller';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('react-container')\n);\n\ninitialise();"],"sourceRoot":""}